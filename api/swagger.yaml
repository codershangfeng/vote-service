swagger: '2.0'
info:
  title: Vote Service
  version: 0.0.1
paths:
  /health:
    get:
      tags:
      - probe
      summary: Health endpoint for container orchestration
      description: Return 200
      responses:
        200:
          description: Healthy
  /vote/{voteId}:
    get:
      tags:
      - vote
      summary: Find vote by ID
      description: Returns a single vote
      operationId: getVoteById
      produces:
      - application/json
      parameters:
      - name: voteId
        in: path
        description: ID of vote to return
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Successful got
          schema:
            $ref: "#/definitions/VoteOutgoing"
        400:
          description: Invalid ID supplied
        404:
          description: Vote not found
    delete:
      tags:
      - vote
      summary: Delete vote by ID
      description: Remove a single vote
      operationId: deleteVoteById
      parameters:
      - name: voteId
        in: path
        description: ID of vote to delete
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Successfull deleted
        400:
          description: Invalid ID supplied
        404:
          description: Vote not found
    put:
      tags:
      - vote
      summary: Update vote by ID
      description: Modify existed vote
      operationId: updateVoteById
      consumes:
      - application/json
      parameters:
      - name: voteId
        in: path
        description: ID of vote to update
        required: true
        type: integer
        format: int64
      - name: vote
        in: body
        required: true
        description: The user to create.
        schema:
          $ref: "#/definitions/VoteIncoming"
      responses:
        200:
          description: Successfull deleted
  /votes:
    get:
      tags:
      - votes
      summary: Find all vote
      description: Returns all the collection of vote
      operationId: getVotes
      produces:
      - application/json
      responses:
        200:
          description: Successful got all
          schema:
            $ref: "#/definitions/Votes"
    post:
      tags:
      - votes
      summary: Save a single vote
      description: Return 201 when created successfully
      operationId: saveVote
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: vote
        required: true
        description: The user to create.
        schema:
          $ref: "#/definitions/VoteIncoming"
      responses:
        '201':
          description: Successful created
          schema:
            $ref: "#/definitions/VoteOutgoing"

definitions:
  Votes:
    type: array
    items:
      $ref: "#/definitions/VoteOutgoing"

  VoteIncoming:
    type: object
    required:
    - topic
    - options
    properties:
      topic:
        type: string
        example: What's your favorite song?
      options:
        type: array
        items:
          type: string
        example: ["Someone Like You", "Lemon", "What a Wonderful World"]

  VoteOutgoing:
    type: object
    properties:
      vid:
        type: integer
        format: int64
        example: 1
      topic:
        type: string
        example: What's your favorite song?
      options:
        type: array
        items:
          type: string
        example: ["Someone Like You", "Lemon", "What a Wonderful World"]
      
